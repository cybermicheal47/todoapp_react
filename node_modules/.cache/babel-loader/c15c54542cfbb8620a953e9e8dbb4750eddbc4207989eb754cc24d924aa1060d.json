{"ast":null,"code":"var _jsxFileName = \"/home/cyb/feedbackuii/src/components/Feedbackform.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Card from './shared/Card';\nimport Button from './shared/Button';\nimport { useState, useContext, useEffect } from 'react';\nimport Ratingselect from './Ratingselect';\nimport Feedbackcontext from '../context/Feedbackcontext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feedbackform() {\n  _s();\n  const [text, settext] = useState('');\n  const [btndisabled, setbtndisabled] = useState(true);\n  const [rating, setrating] = useState(10);\n  const [message, setmessage] = useState('');\n  const {\n    addfeedback,\n    feedbackedit\n  } = useContext(Feedbackcontext);\n  useEffect(() => {\n    console.log('hello');\n  }, [feedbackedit]);\n  const handletextchange = e => {\n    if (text === '') {\n      setbtndisabled(true);\n      setmessage(null);\n    } else if (text !== '' && text.trim().length <= 10) {\n      setmessage('text must be at least 10 characters');\n      setbtndisabled(true);\n    } else {\n      setmessage(null);\n      setbtndisabled(false);\n    }\n    settext(e.target.value);\n  };\n  const handlesubmit = e => {\n    e.preventDefault();\n    if (text.trim().length > 10) {\n      const newfeedback = {\n        text,\n        rating\n      };\n      addfeedback(newfeedback);\n      settext('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlesubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How would you rate your service with  us ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Ratingselect, {\n        select: rating => setrating(rating)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handletextchange,\n          type: \"text\",\n          placeholder: \" write a review \",\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          isDisabled: btndisabled,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 1\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [\" \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Feedbackform, \"Y2VGItGx7rgrTckVVkI5NgHu4II=\");\n_c = Feedbackform;\nexport default Feedbackform;\nvar _c;\n$RefreshReg$(_c, \"Feedbackform\");","map":{"version":3,"names":["React","Card","Button","useState","useContext","useEffect","Ratingselect","Feedbackcontext","jsxDEV","_jsxDEV","Feedbackform","_s","text","settext","btndisabled","setbtndisabled","rating","setrating","message","setmessage","addfeedback","feedbackedit","console","log","handletextchange","e","trim","length","target","value","handlesubmit","preventDefault","newfeedback","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","select","className","onChange","type","placeholder","isDisabled","_c","$RefreshReg$"],"sources":["/home/cyb/feedbackuii/src/components/Feedbackform.js"],"sourcesContent":["import React from 'react'\nimport Card from './shared/Card'\nimport Button from './shared/Button'\nimport { useState,useContext, useEffect } from 'react'\nimport Ratingselect from './Ratingselect'\nimport Feedbackcontext from '../context/Feedbackcontext'\nfunction Feedbackform() {\n const [text, settext] = useState('')\n const [btndisabled , setbtndisabled] = useState(true)\n const[rating, setrating] = useState(10)\n const [message, setmessage] = useState('')\n\nconst{addfeedback, feedbackedit} = useContext(Feedbackcontext)\n\n\nuseEffect(()=>{\nconsole.log('hello')\n},[feedbackedit]\n\n)\n\n\n\n\n\n\n const handletextchange = (e) =>{\n\nif (text === '') {\n  setbtndisabled(true)\n  setmessage(null)\n\n} else if ( text !== '' &&  text.trim().length <= 10) {\n  setmessage('text must be at least 10 characters')\n  setbtndisabled(true)\n}\nelse {\n  setmessage(null)\n  setbtndisabled(false)\n}\n\n\n\n    settext(e.target.value)\n }\n\nconst handlesubmit = (e) =>\n{\n  e.preventDefault()\nif (text.trim().length >10 ){\n  const newfeedback ={\n    text,\n    rating,\n  }\n addfeedback(newfeedback)\n\n settext('')\n}\n\n\n}\n\n\n\n  return (\n    <Card>\n<form onSubmit={handlesubmit}>\n<h2>\nHow would you rate your service \nwith  us ?\n</h2>\n<Ratingselect select={(rating)=>setrating(rating)} />\n<div className='input-group'>\n<input onChange={handletextchange} type='text' placeholder=' write a review '\n\nvalue={text}\n/>\n<Button type='submit'  isDisabled={btndisabled}>\n    Send</Button>\n</div>\n\n{message && <div className='message'> {message}</div>}\n\n</form>\n\n    </Card>\n   \n  )\n}\n\nexport default Feedbackform\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}